# Generated by Django 5.1.2 on 2024-11-03 23:17

import json
import os

from django.conf import settings
from django.db import migrations


def forwards_func(apps, schema_editor):
    RiotGear = apps.get_model("armory", "RiotGear")
    RiotGearType = apps.get_model("armory", "RiotGearType")
    Extension = apps.get_model("rules", "Extension")
    ProtectionType = apps.get_model("armory", "ProtectionType")

    protection_type_map = {
        "n": ProtectionType.objects.get(name_de="Normaler Schutz"),
        "c": ProtectionType.objects.get(name_de="Schutz vor kritischen Treffern"),
        "st": ProtectionType.objects.get(name_de="Haftender Schutz"),
        "b": ProtectionType.objects.get(name_de="Blutungsschutz"),
        "p": ProtectionType.objects.get(name_de="Giftschutz"),
        "f": ProtectionType.objects.get(name_de="Feuerschutz"),
        "r": ProtectionType.objects.get(name_de="Reflektionsschutz"),
        "sh": ProtectionType.objects.get(name_de="Schutz vor Schock"),
    }

    def _import_json(data, extension):
        for item in data:
            riot_gear_type = RiotGearType.objects.get(name_en=item["type"])
            shiel_cover = item.get("shield_cover", 0)
            r = RiotGear.objects.create(
                name_en=item["name_en"],
                name_de=item["name_de"],
                type=riot_gear_type,
                shield_cover=shiel_cover,
                price=item["cost"],
                weight=item["weight"],
                description_en=item["description_en"],
                description_de=item["description_de"],
            )
            r.extensions.add(extension)

            if item.get("protection", None) is not None:
                for protection in item["protection"]:
                    r.riotgearprotection_set.create(
                        protection_type=protection_type_map[protection["type"]],
                        value=protection["value"],
                    )

    with open(os.path.join(settings.BASE_DIR, "contrib", "scifi-armor.json")) as f:
        data = json.load(f)
        _import_json(data, Extension.objects.get(name_en="Science Fiction"))

    with open(os.path.join(settings.BASE_DIR, "contrib", "antique-armor.json")) as f:
        data = json.load(f)
        _import_json(data, Extension.objects.get(name_en="Classical antiquity"))


class Migration(migrations.Migration):

    dependencies = [
        ("armory", "0025_alter_riotgear_price"),
    ]

    operations = [migrations.RunPython(forwards_func)]
