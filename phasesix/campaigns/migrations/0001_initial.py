# Generated by Django 4.1.9 on 2023-06-21 12:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Campaign",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=80, verbose_name="name")),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        max_length=200,
                        null=True,
                        upload_to="campaign_images",
                        verbose_name="image",
                    ),
                ),
                (
                    "image_copyright",
                    models.CharField(
                        blank=True,
                        max_length=40,
                        null=True,
                        verbose_name="image copyright",
                    ),
                ),
                (
                    "image_copyright_url",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="image copyright url",
                    ),
                ),
                (
                    "backdrop_image",
                    models.ImageField(
                        blank=True,
                        max_length=200,
                        null=True,
                        upload_to="campaign_backdrop_images",
                        verbose_name="backdrop image",
                    ),
                ),
                (
                    "backdrop_copyright",
                    models.CharField(
                        blank=True,
                        max_length=40,
                        null=True,
                        verbose_name="image copyright",
                    ),
                ),
                (
                    "backdrop_copyright_url",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="image copyright url",
                    ),
                ),
                (
                    "abstract",
                    models.TextField(blank=True, null=True, verbose_name="abstract"),
                ),
                (
                    "starting_template_points",
                    models.IntegerField(
                        default=0, verbose_name="additional starting career points"
                    ),
                ),
                (
                    "discord_webhook_url",
                    models.URLField(
                        blank=True,
                        help_text="Create a discord webhook and paste it's url here to display dice results.",
                        max_length=256,
                        null=True,
                        verbose_name="discord webhook url",
                    ),
                ),
                (
                    "seed_money",
                    models.IntegerField(default=2000, verbose_name="seed money"),
                ),
                (
                    "foe_visibility",
                    models.CharField(
                        choices=[("G", "GM Only"), ("A", "All")],
                        default="A",
                        max_length=1,
                        verbose_name="foe visibility",
                    ),
                ),
                (
                    "npc_visibility",
                    models.CharField(
                        choices=[("G", "GM Only"), ("A", "All")],
                        default="A",
                        max_length=1,
                        verbose_name="npc visibility",
                    ),
                ),
                (
                    "game_log_visibility",
                    models.CharField(
                        choices=[("G", "GM Only"), ("A", "All")],
                        default="A",
                        max_length=1,
                        verbose_name="game log visibility",
                    ),
                ),
                (
                    "character_visibility",
                    models.CharField(
                        choices=[("G", "GM Only"), ("A", "All")],
                        default="A",
                        max_length=1,
                        verbose_name="character visibility",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Foe",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Handout",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=80, verbose_name="name")),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        max_length=200,
                        null=True,
                        upload_to="campaign_handouts",
                        verbose_name="image",
                    ),
                ),
                (
                    "image_copyright",
                    models.CharField(
                        blank=True,
                        max_length=40,
                        null=True,
                        verbose_name="image copyright",
                    ),
                ),
                (
                    "image_copyright_url",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="image copyright url",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Roll",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "header",
                    models.CharField(
                        blank=True, max_length=120, null=True, verbose_name="header"
                    ),
                ),
                (
                    "description",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "roll_string",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="roll string"
                    ),
                ),
                (
                    "results_csv",
                    models.CharField(max_length=120, verbose_name="results_csv"),
                ),
                ("modifier", models.IntegerField(default=0, verbose_name="modifier")),
                (
                    "minimum_roll",
                    models.IntegerField(default=5, verbose_name="minimum roll"),
                ),
                (
                    "crit_count",
                    models.IntegerField(default=0, verbose_name="crit count"),
                ),
                ("crit_sum", models.IntegerField(default=0, verbose_name="crit sum")),
                (
                    "exploded_dice_count",
                    models.IntegerField(default=0, verbose_name="exploded dice count"),
                ),
                (
                    "exploded_dice_sum",
                    models.IntegerField(default=0, verbose_name="exploded dice sum"),
                ),
                (
                    "highest_single_roll",
                    models.IntegerField(default=0, verbose_name="highest single roll"),
                ),
                (
                    "successes_count",
                    models.IntegerField(default=0, verbose_name="successes count"),
                ),
                (
                    "successes_sum",
                    models.IntegerField(default=0, verbose_name="successes sum"),
                ),
                (
                    "fails_count",
                    models.IntegerField(default=0, verbose_name="fails count"),
                ),
                ("fails_sum", models.IntegerField(default=0, verbose_name="fails sum")),
                ("total_sum", models.IntegerField(default=0, verbose_name="total sum")),
            ],
            options={
                "ordering": ("-created_at",),
            },
        ),
        migrations.CreateModel(
            name="Scene",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=80, verbose_name="name")),
                ("text", models.TextField(blank=True, null=True, verbose_name="text")),
                (
                    "campaign",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="campaigns.campaign",
                    ),
                ),
            ],
        ),
    ]
