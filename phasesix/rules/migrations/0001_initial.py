# Generated by Django 4.1.9 on 2023-06-21 12:07

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        ("armory", "0001_initial"),
        ("magic", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="Attribute",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name_de", models.CharField(max_length=120, verbose_name="name")),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=120, null=True, verbose_name="name"
                    ),
                ),
                (
                    "identifier",
                    models.CharField(max_length=120, verbose_name="identifier"),
                ),
                (
                    "description_de",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "kind",
                    models.CharField(
                        choices=[("per", "persona"), ("phy", "physis")],
                        max_length=3,
                        verbose_name="kind",
                    ),
                ),
            ],
            options={
                "verbose_name": "attribute",
                "verbose_name_plural": "attributes",
            },
        ),
        migrations.CreateModel(
            name="Extension",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_mandatory",
                    models.BooleanField(default=False, verbose_name="is mandatory"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                (
                    "type",
                    models.CharField(
                        choices=[("x", "Extension"), ("e", "Epoch"), ("w", "World")],
                        default="x",
                        max_length=1,
                        verbose_name="type",
                    ),
                ),
                ("name_de", models.CharField(max_length=120, verbose_name="name")),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=120, null=True, verbose_name="name"
                    ),
                ),
                (
                    "identifier",
                    models.CharField(max_length=20, verbose_name="identifier"),
                ),
                (
                    "description_de",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "year_range_de",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="year range"
                    ),
                ),
                (
                    "year_range_en",
                    models.CharField(
                        blank=True, max_length=50, null=True, verbose_name="year range"
                    ),
                ),
                (
                    "fa_icon_class",
                    models.CharField(
                        default="fas fa-book",
                        max_length=30,
                        verbose_name="FA Icon Class",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        max_length=256,
                        null=True,
                        upload_to="extension_images",
                        verbose_name="image",
                    ),
                ),
                (
                    "image_copyright",
                    models.CharField(
                        blank=True,
                        max_length=40,
                        null=True,
                        verbose_name="image copyright",
                    ),
                ),
                (
                    "image_copyright_url",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="image copyright url",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="modified at"),
                ),
                ("ordering", models.IntegerField(default=100, verbose_name="ordering")),
                (
                    "select_spells_by",
                    models.CharField(
                        choices=[("t", "Type"), ("o", "Origin")],
                        default="t",
                        help_text="Select spells by type (terra, nexus) or origin (tirakan)",
                        max_length=1,
                        verbose_name="select spells by",
                    ),
                ),
                (
                    "currency_map",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="armory.currencymap",
                    ),
                ),
                (
                    "fixed_epoch",
                    models.ForeignKey(
                        blank=True,
                        limit_choices_to={"type": "e"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="rules.extension",
                    ),
                ),
                (
                    "fixed_extensions",
                    models.ManyToManyField(
                        blank=True, limit_choices_to={"type": "x"}, to="rules.extension"
                    ),
                ),
            ],
            options={
                "verbose_name": "extension",
                "verbose_name_plural": "extensions",
                "ordering": ("ordering",),
            },
        ),
        migrations.CreateModel(
            name="Knowledge",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name_de", models.CharField(max_length=120, verbose_name="name")),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=120, null=True, verbose_name="name"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="modified at"),
                ),
                (
                    "description_de",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                ("extensions", models.ManyToManyField(to="rules.extension")),
            ],
            options={
                "verbose_name": "knowledge",
                "verbose_name_plural": "knowledge",
            },
        ),
        migrations.CreateModel(
            name="Skill",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name_de", models.CharField(max_length=120, verbose_name="name")),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=120, null=True, verbose_name="name"
                    ),
                ),
                (
                    "description_de",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "kind",
                    models.CharField(
                        choices=[("p", "practical"), ("m", "mind")],
                        max_length=1,
                        verbose_name="kind",
                    ),
                ),
                ("extensions", models.ManyToManyField(to="rules.extension")),
                (
                    "reference_attribute_1",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reference_attribute_1_set",
                        to="rules.attribute",
                        verbose_name="reference attribute 1",
                    ),
                ),
                (
                    "reference_attribute_2",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reference_attribute_2_set",
                        to="rules.attribute",
                        verbose_name="reference attribute 2",
                    ),
                ),
            ],
            options={
                "verbose_name": "skill",
                "verbose_name_plural": "skills",
            },
        ),
        migrations.CreateModel(
            name="Template",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name_de", models.CharField(max_length=120, verbose_name="name")),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=120, null=True, verbose_name="name"
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="modified at"),
                ),
                (
                    "rules_de",
                    models.TextField(blank=True, null=True, verbose_name="rules"),
                ),
                (
                    "rules_en",
                    models.TextField(blank=True, null=True, verbose_name="rules"),
                ),
                (
                    "show_rules_in_combat",
                    models.BooleanField(
                        default=False,
                        help_text="Show the rule as combat action on the combat tab.",
                        verbose_name="Show rules in combat",
                    ),
                ),
                (
                    "show_in_attack_dice_rolls",
                    models.BooleanField(
                        default=False,
                        help_text="Show the name in attack dice rolls.",
                        verbose_name="Show in attack dice rolls",
                    ),
                ),
                (
                    "quote",
                    models.TextField(blank=True, null=True, verbose_name="quote"),
                ),
                (
                    "quote_author",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="quote author",
                    ),
                ),
                ("cost", models.IntegerField(default=1, verbose_name="cost")),
            ],
            options={
                "verbose_name": "character template",
                "verbose_name_plural": "character templates",
                "ordering": ("category__sort_order",),
            },
        ),
        migrations.CreateModel(
            name="TemplateCategory",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name_de", models.CharField(max_length=120, verbose_name="name")),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=120, null=True, verbose_name="name"
                    ),
                ),
                (
                    "fg_color_class",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("", "None"),
                            ("primary", "primary"),
                            ("secondary", "secondary"),
                            ("success", "success"),
                            ("danger", "danger"),
                            ("warning", "warning"),
                            ("info", "info"),
                            ("light", "light"),
                            ("dark", "dark"),
                            ("muted", "muted"),
                            ("white", "white"),
                        ],
                        default="",
                        max_length=10,
                        verbose_name="bootstrap color class",
                    ),
                ),
                (
                    "bg_color_class",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("", "None"),
                            ("primary", "primary"),
                            ("secondary", "secondary"),
                            ("success", "success"),
                            ("danger", "danger"),
                            ("warning", "warning"),
                            ("info", "info"),
                            ("light", "light"),
                            ("dark", "dark"),
                            ("muted", "muted"),
                            ("white", "white"),
                        ],
                        default="",
                        max_length=10,
                        verbose_name="bootstrap color class",
                    ),
                ),
                (
                    "description_de",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "sort_order",
                    models.IntegerField(default=1000, verbose_name="sort order"),
                ),
                (
                    "allow_for_reputation",
                    models.BooleanField(
                        default=True, verbose_name="Allow for reputation"
                    ),
                ),
                (
                    "allow_at_character_creation",
                    models.BooleanField(
                        default=True, verbose_name="Allow at character creation"
                    ),
                ),
            ],
            options={
                "verbose_name": "template category",
                "verbose_name_plural": "template categories",
                "ordering": ("sort_order",),
            },
        ),
        migrations.CreateModel(
            name="TemplateRequirement",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "required_template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="required_template_requirement_set",
                        to="rules.template",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rules.template",
                        verbose_name="template",
                    ),
                ),
            ],
        ),
        migrations.CreateModel(
            name="TemplateModifier",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "aspect",
                    models.CharField(
                        blank=True,
                        choices=[
                            ("base_max_health", "max health"),
                            ("base_max_arcana", "max arcana"),
                            ("base_spell_points", "spell points"),
                            ("base_actions", "actions"),
                            ("base_minimum_roll", "minimum roll"),
                            ("base_protection", "protection"),
                            ("base_evasion", "evasion"),
                            ("base_bonus_dice", "bonus dice"),
                            ("base_destiny_dice", "destiny dice"),
                            ("base_rerolls", "rerolls"),
                            ("base_max_stress", "max stress"),
                        ],
                        max_length=40,
                        null=True,
                        verbose_name="aspect",
                    ),
                ),
                (
                    "aspect_modifier",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="aspect modifier"
                    ),
                ),
                (
                    "attribute_modifier",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="attribute modifier"
                    ),
                ),
                (
                    "skill_modifier",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="skill modifier"
                    ),
                ),
                (
                    "knowledge_modifier",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="knowledge modifier"
                    ),
                ),
                (
                    "allows_priest_actions",
                    models.BooleanField(
                        default=False, verbose_name="allows priest actions"
                    ),
                ),
                (
                    "attribute",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rules.attribute",
                        verbose_name="attribute",
                    ),
                ),
                (
                    "knowledge",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rules.knowledge",
                        verbose_name="knowledge",
                    ),
                ),
                (
                    "skill",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rules.skill",
                        verbose_name="skill",
                    ),
                ),
                (
                    "template",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="rules.template",
                        verbose_name="template",
                    ),
                ),
                (
                    "unlocks_spell_origin",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="magic.spellorigin",
                        verbose_name="unlocks spell origin",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="template",
            name="category",
            field=models.ForeignKey(
                on_delete=django.db.models.deletion.CASCADE,
                to="rules.templatecategory",
                verbose_name="category",
            ),
        ),
        migrations.AddField(
            model_name="template",
            name="extensions",
            field=models.ManyToManyField(to="rules.extension"),
        ),
        migrations.CreateModel(
            name="StatusEffect",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                (
                    "fa_icon_class",
                    models.CharField(
                        default="fas fa-book",
                        max_length=30,
                        verbose_name="FA Icon Class",
                    ),
                ),
                ("name_de", models.CharField(max_length=120, verbose_name="name")),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=120, null=True, verbose_name="name"
                    ),
                ),
                (
                    "rules_de",
                    models.TextField(blank=True, null=True, verbose_name="rules"),
                ),
                (
                    "rules_en",
                    models.TextField(blank=True, null=True, verbose_name="rules"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="modified at"),
                ),
                ("ordering", models.IntegerField(default=100, verbose_name="ordering")),
                ("extensions", models.ManyToManyField(to="rules.extension")),
            ],
            options={
                "verbose_name": "status effect",
                "verbose_name_plural": "status effects",
                "ordering": ("ordering",),
            },
        ),
        migrations.CreateModel(
            name="Lineage",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name_de", models.CharField(max_length=80, verbose_name="name")),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=80, null=True, verbose_name="name"
                    ),
                ),
                (
                    "description_de",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="modified at"),
                ),
                (
                    "base_max_health",
                    models.IntegerField(default=6, verbose_name="max health"),
                ),
                (
                    "base_max_arcana",
                    models.IntegerField(default=0, verbose_name="max arcana"),
                ),
                (
                    "base_spell_points",
                    models.IntegerField(default=0, verbose_name="spell points"),
                ),
                (
                    "base_actions",
                    models.IntegerField(default=2, verbose_name="base actions"),
                ),
                (
                    "base_minimum_roll",
                    models.IntegerField(default=5, verbose_name="base minimum roll"),
                ),
                (
                    "base_bonus_dice",
                    models.IntegerField(default=0, verbose_name="base bonus dice"),
                ),
                (
                    "base_destiny_dice",
                    models.IntegerField(default=0, verbose_name="base destiny dice"),
                ),
                (
                    "base_rerolls",
                    models.IntegerField(default=0, verbose_name="base rerolls"),
                ),
                (
                    "base_evasion",
                    models.IntegerField(default=0, verbose_name="base evasion"),
                ),
                (
                    "base_protection",
                    models.IntegerField(default=0, verbose_name="base armor"),
                ),
                (
                    "base_max_stress",
                    models.IntegerField(default=6, verbose_name="max stress"),
                ),
                (
                    "template_points",
                    models.IntegerField(default=20, verbose_name="template points"),
                ),
                ("extensions", models.ManyToManyField(to="rules.extension")),
                (
                    "template",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="rules.template",
                    ),
                ),
            ],
            options={
                "verbose_name": "lineage",
                "verbose_name_plural": "lineages",
            },
        ),
        migrations.AddField(
            model_name="knowledge",
            name="skill",
            field=models.ForeignKey(
                blank=True,
                null=True,
                on_delete=django.db.models.deletion.SET_NULL,
                to="rules.skill",
                verbose_name="Skill",
            ),
        ),
    ]
