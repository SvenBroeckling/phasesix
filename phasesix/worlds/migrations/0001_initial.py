# Generated by Django 4.1.9 on 2023-06-21 12:07

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):
    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ("rules", "0001_initial"),
    ]

    operations = [
        migrations.CreateModel(
            name="WikiPage",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="modified at"),
                ),
                ("name_de", models.CharField(max_length=120, verbose_name="name")),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=120, null=True, verbose_name="name"
                    ),
                ),
                (
                    "short_name_de",
                    models.CharField(
                        blank=True,
                        help_text="An optional short name for the default link text.",
                        max_length=90,
                        null=True,
                        verbose_name="short name",
                    ),
                ),
                (
                    "short_name_en",
                    models.CharField(
                        blank=True,
                        help_text="An optional short name for the default link text.",
                        max_length=90,
                        null=True,
                        verbose_name="short name",
                    ),
                ),
                (
                    "slug",
                    models.SlugField(max_length=220, unique=True, verbose_name="slug"),
                ),
                (
                    "text_de",
                    models.TextField(
                        blank=True,
                        help_text="The wiki page text. This may contain Wiki links.",
                        null=True,
                        verbose_name="text",
                    ),
                ),
                (
                    "text_en",
                    models.TextField(
                        blank=True,
                        help_text="The wiki page text. This may contain Wiki links.",
                        null=True,
                        verbose_name="text",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        max_length=256,
                        null=True,
                        upload_to="wiki_page_images",
                        verbose_name="image",
                    ),
                ),
                (
                    "image_copyright",
                    models.CharField(
                        blank=True,
                        max_length=40,
                        null=True,
                        verbose_name="image copyright",
                    ),
                ),
                (
                    "image_copyright_url",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="image copyright url",
                    ),
                ),
                (
                    "actions_heading_de",
                    models.CharField(
                        blank=True,
                        max_length=40,
                        null=True,
                        verbose_name="actions heading",
                    ),
                ),
                (
                    "actions_heading_en",
                    models.CharField(
                        blank=True,
                        max_length=40,
                        null=True,
                        verbose_name="actions heading",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                ("ordering", models.IntegerField(default=100, verbose_name="ordering")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "parent",
                    models.ForeignKey(
                        blank=True,
                        help_text="The parent wiki page.",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="worlds.wikipage",
                        verbose_name="parent",
                    ),
                ),
            ],
            options={
                "verbose_name": "wiki page",
                "verbose_name_plural": "wiki pages",
                "ordering": ("ordering",),
            },
        ),
        migrations.CreateModel(
            name="WikiPageFoeResistanceOrWeakness",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name_de", models.CharField(max_length=100, verbose_name="name")),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="name"
                    ),
                ),
            ],
            options={
                "verbose_name": "wiki page foe resistance or weakness",
                "verbose_name_plural": "wiki page foe resistances or weaknesses",
            },
        ),
        migrations.CreateModel(
            name="WikiPageFoeType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name_de", models.CharField(max_length=100, verbose_name="name")),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="name"
                    ),
                ),
            ],
            options={
                "verbose_name": "wiki page foe type",
                "verbose_name_plural": "wiki page foe types",
            },
        ),
        migrations.CreateModel(
            name="World",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="modified at"),
                ),
                ("name_de", models.CharField(max_length=120, verbose_name="name")),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=120, null=True, verbose_name="name"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        max_length=220, null=True, unique=True, verbose_name="slug"
                    ),
                ),
                (
                    "description_1_de",
                    models.TextField(
                        blank=True, null=True, verbose_name="description 1"
                    ),
                ),
                (
                    "description_1_en",
                    models.TextField(
                        blank=True, null=True, verbose_name="description 1"
                    ),
                ),
                (
                    "description_2_de",
                    models.TextField(
                        blank=True, null=True, verbose_name="description 2"
                    ),
                ),
                (
                    "description_2_en",
                    models.TextField(
                        blank=True, null=True, verbose_name="description 2"
                    ),
                ),
                (
                    "description_3_de",
                    models.TextField(
                        blank=True, null=True, verbose_name="description 3"
                    ),
                ),
                (
                    "description_3_en",
                    models.TextField(
                        blank=True, null=True, verbose_name="description 3"
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="is active"),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        max_length=256,
                        null=True,
                        upload_to="world_images",
                        verbose_name="image",
                    ),
                ),
                (
                    "image_copyright",
                    models.CharField(
                        blank=True,
                        max_length=40,
                        null=True,
                        verbose_name="image copyright",
                    ),
                ),
                (
                    "image_copyright_url",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="image copyright url",
                    ),
                ),
                (
                    "info_name_cm_de",
                    models.CharField(
                        default="cm", max_length=20, verbose_name="Name for centimeter"
                    ),
                ),
                (
                    "info_name_cm_en",
                    models.CharField(
                        blank=True,
                        default="cm",
                        max_length=20,
                        verbose_name="Name for centimeter",
                    ),
                ),
                (
                    "info_name_kg_de",
                    models.CharField(
                        default="kg", max_length=20, verbose_name="Name for kilogram"
                    ),
                ),
                (
                    "info_name_kg_en",
                    models.CharField(
                        blank=True,
                        default="kg",
                        max_length=20,
                        verbose_name="Name for kilogram",
                    ),
                ),
                ("ordering", models.IntegerField(default=100, verbose_name="ordering")),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "extension",
                    models.ForeignKey(
                        blank=True,
                        help_text="The corresponding world extension, which is added to the characters.",
                        limit_choices_to={"type": "w"},
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="rules.extension",
                        verbose_name="extension",
                    ),
                ),
            ],
            options={
                "verbose_name": "world",
                "verbose_name_plural": "worlds",
                "ordering": ("ordering",),
            },
        ),
        migrations.CreateModel(
            name="WorldSiteConfiguration",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "dns_domain_name",
                    models.CharField(
                        blank=True,
                        help_text="This world is set as default if the given dns domain name is requested",
                        max_length=120,
                        null=True,
                        verbose_name="dns domain name",
                    ),
                ),
                (
                    "session_cookie_domain",
                    models.CharField(
                        blank=True,
                        max_length=120,
                        null=True,
                        verbose_name="session cookie domain",
                    ),
                ),
                (
                    "brand_name_de",
                    models.CharField(max_length=80, verbose_name="Brand name"),
                ),
                (
                    "brand_name_en",
                    models.CharField(
                        blank=True, max_length=80, null=True, verbose_name="Brand name"
                    ),
                ),
                (
                    "brand_logo",
                    models.ImageField(
                        blank=True,
                        max_length=256,
                        null=True,
                        upload_to="brand_logos",
                        verbose_name="Brand Logo",
                    ),
                ),
                (
                    "description_de",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, null=True, verbose_name="Description"),
                ),
                (
                    "template_addon",
                    models.CharField(max_length=40, verbose_name="Template Suffix"),
                ),
                (
                    "world",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE, to="worlds.world"
                    ),
                ),
            ],
            options={
                "verbose_name": "world site configuration",
                "verbose_name_plural": "world site configurations",
            },
        ),
        migrations.CreateModel(
            name="WikiPageImage",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="modified at"),
                ),
                (
                    "image",
                    models.ImageField(
                        max_length=256,
                        upload_to="wiki_page_images",
                        verbose_name="image",
                    ),
                ),
                (
                    "image_copyright",
                    models.CharField(
                        blank=True,
                        max_length=40,
                        null=True,
                        verbose_name="image copyright",
                    ),
                ),
                (
                    "image_copyright_url",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="image copyright url",
                    ),
                ),
                ("caption", models.CharField(max_length=120, verbose_name="caption")),
                (
                    "slug",
                    models.SlugField(
                        max_length=220, null=True, unique=True, verbose_name="slug"
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                (
                    "wiki_page",
                    models.ForeignKey(
                        help_text="The wiki page the image belongs to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="worlds.wikipage",
                        verbose_name="wiki page",
                    ),
                ),
            ],
            options={
                "verbose_name": "wiki page image",
                "verbose_name_plural": "wiki page images",
            },
        ),
        migrations.CreateModel(
            name="WikiPageGameValues",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="modified at"),
                ),
                ("health", models.IntegerField(default=6, verbose_name="health")),
                ("arcana", models.IntegerField(default=0, verbose_name="arcana")),
                (
                    "protection",
                    models.IntegerField(default=0, verbose_name="protection"),
                ),
                (
                    "perception",
                    models.IntegerField(default=2, verbose_name="perception"),
                ),
                ("actions", models.IntegerField(default=2, verbose_name="actions")),
                ("quickness", models.IntegerField(default=1, verbose_name="quickness")),
                (
                    "walking_range",
                    models.IntegerField(default=4, verbose_name="walking range"),
                ),
                (
                    "minimum_roll",
                    models.IntegerField(default=5, verbose_name="minimum roll"),
                ),
                (
                    "stress_test_succeeded_stress",
                    models.IntegerField(
                        default=0, verbose_name="stress test succeeded stress"
                    ),
                ),
                (
                    "stress_test_failed_stress",
                    models.IntegerField(
                        default=0, verbose_name="stress test failed stress"
                    ),
                ),
                (
                    "resistances",
                    models.ManyToManyField(
                        blank=True,
                        related_name="wiki_page_game_values_resistance_set",
                        to="worlds.wikipagefoeresistanceorweakness",
                        verbose_name="resistances",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="worlds.wikipagefoetype",
                        verbose_name="type",
                    ),
                ),
                (
                    "weaknesses",
                    models.ManyToManyField(
                        blank=True,
                        related_name="wiki_page_game_values_weakness_set",
                        to="worlds.wikipagefoeresistanceorweakness",
                        verbose_name="weaknesses",
                    ),
                ),
                (
                    "wiki_page",
                    models.ForeignKey(
                        help_text="The wiki page the values belong to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="worlds.wikipage",
                        verbose_name="wiki page",
                    ),
                ),
            ],
            options={
                "verbose_name": "wiki page game values",
                "verbose_name_plural": "wiki page game values",
                "get_latest_by": "id",
            },
        ),
        migrations.CreateModel(
            name="WikiPageGameAction",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="modified at"),
                ),
                ("name_de", models.CharField(max_length=256, verbose_name="name")),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=256, null=True, verbose_name="name"
                    ),
                ),
                ("skill", models.IntegerField(default=6, verbose_name="skill")),
                ("effect_de", models.TextField(verbose_name="effect")),
                (
                    "effect_en",
                    models.TextField(blank=True, null=True, verbose_name="effect"),
                ),
                (
                    "wiki_page",
                    models.ForeignKey(
                        help_text="The wiki page the values belong to.",
                        on_delete=django.db.models.deletion.CASCADE,
                        to="worlds.wikipage",
                        verbose_name="wiki page",
                    ),
                ),
            ],
            options={
                "verbose_name": "wiki page game action",
                "verbose_name_plural": "wiki page game actions",
            },
        ),
        migrations.AddField(
            model_name="wikipage",
            name="world",
            field=models.ForeignKey(
                help_text="The world this page belongs to.",
                on_delete=django.db.models.deletion.CASCADE,
                to="worlds.world",
                verbose_name="world",
            ),
        ),
    ]
