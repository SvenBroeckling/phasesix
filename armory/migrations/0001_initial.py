# Generated by Django 4.1.9 on 2023-06-21 12:07

from django.db import migrations, models


class Migration(migrations.Migration):
    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="AttackMode",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name_de", models.CharField(max_length=100, verbose_name="name")),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="name"
                    ),
                ),
                (
                    "dice_bonus",
                    models.IntegerField(default=1, verbose_name="dice bonus"),
                ),
                (
                    "capacity_consumed",
                    models.IntegerField(default=1, verbose_name="capacity consumed"),
                ),
            ],
            options={
                "verbose_name": "attack mode",
                "verbose_name_plural": "attack modes",
            },
        ),
        migrations.CreateModel(
            name="CurrencyMap",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20, verbose_name="name")),
            ],
        ),
        migrations.CreateModel(
            name="CurrencyMapUnit",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=20, verbose_name="name")),
                (
                    "color_class",
                    models.CharField(
                        choices=[
                            ("text-white", "White"),
                            ("text-success", "Success"),
                            ("text-primary", "Primary"),
                            ("text-secondary", "Secondary"),
                            ("text-warning", "Warning"),
                            ("text-danger", "Danger"),
                        ],
                        default="text-warning",
                        max_length=30,
                    ),
                ),
                (
                    "fa_icon_class",
                    models.CharField(
                        choices=[
                            ("fas fa-coins", "Coins"),
                            ("fas fa-euro-sign", "Euro"),
                            ("fas fa-dollar-sign", "Dollar"),
                            ("fas fa-rupee-sign", "Rupee"),
                            ("fas fa-pound-sign", "Pound"),
                            ("fas fa-lira-sign", "Lira"),
                            ("fas fa-shekel-sign", "Shekel"),
                            ("fas fa-yen-sign", "Yen"),
                            ("fas fa-won-sign", "Won"),
                        ],
                        default="fas fa-coins",
                        max_length=30,
                        verbose_name="FA Icon Class",
                    ),
                ),
                (
                    "is_common",
                    models.BooleanField(
                        default=False,
                        help_text="Is this the common unit people pay with?",
                        verbose_name="is common",
                    ),
                ),
                ("ordering", models.IntegerField(default=10, verbose_name="ordering")),
            ],
            options={
                "ordering": ("-ordering",),
                "get_latest_by": ("id",),
            },
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name_de", models.CharField(max_length=256, verbose_name="name")),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=256, null=True, verbose_name="name"
                    ),
                ),
                (
                    "description_de",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "is_container",
                    models.BooleanField(default=False, verbose_name="is container"),
                ),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, verbose_name="weight"
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, verbose_name="price"
                    ),
                ),
                (
                    "concealment",
                    models.IntegerField(default=0, verbose_name="concealment"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "is_homebrew",
                    models.BooleanField(default=False, verbose_name="is homebrew"),
                ),
                (
                    "keep_as_homebrew",
                    models.BooleanField(
                        default=False,
                        help_text="This was not accepted as general item and is kept as homebrew.",
                        verbose_name="keep as homebrew",
                    ),
                ),
                (
                    "charges",
                    models.IntegerField(blank=True, null=True, verbose_name="charges"),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="modified at"),
                ),
                (
                    "usable_in_combat",
                    models.BooleanField(default=False, verbose_name="usable in combat"),
                ),
                (
                    "dice_roll_string",
                    models.CharField(
                        blank=True,
                        help_text="Shows a roll button at the item if not empty.",
                        max_length=10,
                        null=True,
                        verbose_name="dice role string",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        max_length=256,
                        null=True,
                        upload_to="item_images/",
                        verbose_name="image",
                    ),
                ),
                (
                    "image_copyright",
                    models.CharField(
                        blank=True,
                        max_length=40,
                        null=True,
                        verbose_name="image copyright",
                    ),
                ),
                (
                    "image_copyright_url",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="image copyright url",
                    ),
                ),
            ],
            options={
                "verbose_name": "item",
                "verbose_name_plural": "items",
            },
        ),
        migrations.CreateModel(
            name="ItemType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name_de", models.CharField(max_length=100, verbose_name="name")),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="name"
                    ),
                ),
                (
                    "description_de",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="modified at"),
                ),
                ("ordering", models.IntegerField(default=10, verbose_name="ordering")),
            ],
            options={
                "verbose_name": "item type",
                "verbose_name_plural": "item types",
                "ordering": ("-ordering",),
            },
        ),
        migrations.CreateModel(
            name="RiotGear",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="modified at"),
                ),
                ("name_de", models.CharField(max_length=256, verbose_name="name")),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=256, null=True, verbose_name="name"
                    ),
                ),
                (
                    "description_de",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "protection_ballistic",
                    models.IntegerField(default=0, verbose_name="protection ballistic"),
                ),
                (
                    "encumbrance",
                    models.IntegerField(default=1, verbose_name="encumbrance"),
                ),
                (
                    "concealment",
                    models.IntegerField(default=0, verbose_name="concealment"),
                ),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, verbose_name="weight"
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, verbose_name="price"
                    ),
                ),
                (
                    "is_homebrew",
                    models.BooleanField(default=False, verbose_name="is homebrew"),
                ),
                (
                    "keep_as_homebrew",
                    models.BooleanField(
                        default=False,
                        help_text="This was not accepted as general riot gear and is kept as homebrew.",
                        verbose_name="keep as homebrew",
                    ),
                ),
            ],
            options={
                "verbose_name": "riot gear",
                "verbose_name_plural": "riot gear",
            },
        ),
        migrations.CreateModel(
            name="RiotGearType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name_de", models.CharField(max_length=256, verbose_name="name")),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=256, null=True, verbose_name="name"
                    ),
                ),
                (
                    "description_de",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                ("ordering", models.IntegerField(default=10, verbose_name="ordering")),
            ],
            options={
                "ordering": ("-ordering",),
            },
        ),
        migrations.CreateModel(
            name="Weapon",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="modified at"),
                ),
                (
                    "is_hand_to_hand_weapon",
                    models.BooleanField(
                        default=False, verbose_name="is hand to hand weapon"
                    ),
                ),
                (
                    "is_throwing_weapon",
                    models.BooleanField(
                        default=False, verbose_name="is throwing weapon"
                    ),
                ),
                ("name_de", models.CharField(max_length=256, verbose_name="name")),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=256, null=True, verbose_name="name"
                    ),
                ),
                (
                    "description_de",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                ("piercing", models.IntegerField(default=0, verbose_name="piercing")),
                (
                    "damage_potential",
                    models.IntegerField(default=0, verbose_name="damage potential"),
                ),
                (
                    "recoil_compensation",
                    models.IntegerField(default=0, verbose_name="recoil compensation"),
                ),
                (
                    "crit_minimum_roll",
                    models.IntegerField(default=11, verbose_name="crit minimum roll"),
                ),
                (
                    "encumbrance",
                    models.IntegerField(default=0, verbose_name="encumbrance"),
                ),
                (
                    "concealment",
                    models.IntegerField(default=0, verbose_name="concealment"),
                ),
                (
                    "reload_actions",
                    models.IntegerField(default=1, verbose_name="reload actions"),
                ),
                (
                    "actions_to_ready",
                    models.IntegerField(default=1, verbose_name="actions to ready"),
                ),
                (
                    "capacity",
                    models.IntegerField(blank=True, null=True, verbose_name="capacity"),
                ),
                (
                    "weight",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, verbose_name="weight"
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=8, verbose_name="price"
                    ),
                ),
                (
                    "is_homebrew",
                    models.BooleanField(default=False, verbose_name="is homebrew"),
                ),
                (
                    "keep_as_homebrew",
                    models.BooleanField(
                        default=False,
                        help_text="This was not accepted as general weapon and is kept as homebrew.",
                        verbose_name="keep as homebrew",
                    ),
                ),
                (
                    "range_meter",
                    models.IntegerField(default=0, verbose_name="range (meter)"),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        max_length=256,
                        null=True,
                        upload_to="weapon_images/",
                        verbose_name="image",
                    ),
                ),
                (
                    "image_copyright",
                    models.CharField(
                        blank=True,
                        max_length=40,
                        null=True,
                        verbose_name="image copyright",
                    ),
                ),
                (
                    "image_copyright_url",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="image copyright url",
                    ),
                ),
            ],
            options={
                "verbose_name": "weapon",
                "verbose_name_plural": "weapons",
            },
        ),
        migrations.CreateModel(
            name="WeaponAttackMode",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "dice_bonus_override",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="dice bonus override"
                    ),
                ),
                (
                    "capacity_consumed_override",
                    models.IntegerField(
                        blank=True, null=True, verbose_name="capacity consumed override"
                    ),
                ),
            ],
            options={
                "verbose_name": "weapon attack mode",
                "verbose_name_plural": "weapon attack modes",
            },
        ),
        migrations.CreateModel(
            name="WeaponModification",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name_de", models.CharField(max_length=40, verbose_name="name")),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=40, null=True, verbose_name="name"
                    ),
                ),
                (
                    "description_de",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "rules_de",
                    models.TextField(
                        blank=True,
                        help_text="Rules for this weapon modification. May be blank if only attribute changes apply.",
                        null=True,
                        verbose_name="rules",
                    ),
                ),
                (
                    "rules_en",
                    models.TextField(
                        blank=True,
                        help_text="Rules for this weapon modification. May be blank if only attribute changes apply.",
                        null=True,
                        verbose_name="rules",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, verbose_name="price"
                    ),
                ),
            ],
            options={
                "verbose_name": "weapon modification",
                "verbose_name_plural": "weapon modification",
            },
        ),
        migrations.CreateModel(
            name="WeaponModificationAttributeChange",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "attribute",
                    models.CharField(
                        choices=[
                            ("capacity", "Capacity"),
                            ("recoil_compensation", "Recoil compensation"),
                            ("actions_to_ready", "Actions to ready"),
                            ("crit_minimum_roll", "Crit minimum roll"),
                            ("encumbrance", "Encumbrance"),
                            ("damage_potential", "Damage potential"),
                            ("piercing", "Piercing"),
                            ("concealment", "Concealment"),
                            ("reload_actions", "Reload actions"),
                            ("range_meter", "Range (meter)"),
                        ],
                        max_length=40,
                        verbose_name="attribute",
                    ),
                ),
                (
                    "attribute_modifier",
                    models.IntegerField(default=0, verbose_name="attribute modifier"),
                ),
                (
                    "status_effect_value",
                    models.IntegerField(default=0, verbose_name="status effect value"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="WeaponModificationType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name_de", models.CharField(max_length=20, verbose_name="name")),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="name"
                    ),
                ),
                (
                    "description_de",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "unique_equip",
                    models.BooleanField(
                        default=False,
                        help_text="A weapon may only have one modification of this type (i.E. sights)",
                        verbose_name="unique equip",
                    ),
                ),
            ],
            options={
                "verbose_name": "weapon modification type",
                "verbose_name_plural": "weapon modification type",
            },
        ),
        migrations.CreateModel(
            name="WeaponType",
            fields=[
                (
                    "id",
                    models.AutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name_de", models.CharField(max_length=100, verbose_name="name")),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=100, null=True, verbose_name="name"
                    ),
                ),
                (
                    "description_de",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "description_en",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "modified_at",
                    models.DateTimeField(auto_now=True, verbose_name="modified at"),
                ),
                ("ordering", models.IntegerField(default=10, verbose_name="ordering")),
            ],
            options={
                "verbose_name": "weapon type",
                "verbose_name_plural": "weapon types",
                "ordering": ("-ordering",),
            },
        ),
    ]
