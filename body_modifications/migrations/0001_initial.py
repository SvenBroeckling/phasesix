# Generated by Django 5.1.7 on 2025-03-31 19:10

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("campaigns", "0009_alter_campaign_options"),
        ("characters", "0013_alter_character_options"),
        ("rules", "0009_extension_exclusive_languages"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="BodyModificationType",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name_de", models.CharField(max_length=30, verbose_name="name")),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=30, null=True, verbose_name="name"
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        max_length=256,
                        null=True,
                        upload_to="body_modification_type_images",
                        verbose_name="image",
                    ),
                ),
                (
                    "image_copyright",
                    models.CharField(
                        blank=True,
                        max_length=40,
                        null=True,
                        verbose_name="image copyright",
                    ),
                ),
                (
                    "image_copyright_url",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="image copyright url",
                    ),
                ),
            ],
            options={
                "verbose_name": "body modification type",
                "verbose_name_plural": "body modification types",
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="SocketLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name_de", models.CharField(max_length=30, verbose_name="name")),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=30, null=True, verbose_name="name"
                    ),
                ),
            ],
            options={
                "verbose_name": "socket location",
                "verbose_name_plural": "socket locations",
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="BodyModification",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "is_homebrew",
                    models.BooleanField(default=False, verbose_name="is homebrew"),
                ),
                (
                    "keep_as_homebrew",
                    models.BooleanField(
                        default=False,
                        help_text="This was not accepted as general spell and is kept as homebrew.",
                        verbose_name="keep as homebrew",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2, max_digits=6, verbose_name="price"
                    ),
                ),
                (
                    "rarity",
                    models.CharField(
                        choices=[
                            ("c", "Common"),
                            ("u", "Uncommon"),
                            ("r", "Rare"),
                            ("1", "Unique"),
                            ("l", "Legendary"),
                        ],
                        default="c",
                        max_length=1,
                        verbose_name="rarity",
                    ),
                ),
                (
                    "bio_strain",
                    models.IntegerField(default=1, verbose_name="bio strain"),
                ),
                (
                    "energy_consumption_ma",
                    models.IntegerField(
                        default=1, verbose_name="energy consumption (mA)"
                    ),
                ),
                (
                    "charges",
                    models.IntegerField(blank=True, null=True, verbose_name="charges"),
                ),
                (
                    "usable_in_combat",
                    models.BooleanField(default=False, verbose_name="usable in combat"),
                ),
                (
                    "dice_roll_string",
                    models.CharField(
                        blank=True,
                        help_text="Shows a roll button at the item if not empty.",
                        max_length=10,
                        null=True,
                        verbose_name="dice role string",
                    ),
                ),
                (
                    "image",
                    models.ImageField(
                        blank=True,
                        max_length=256,
                        null=True,
                        upload_to="body_modification_images",
                        verbose_name="image",
                    ),
                ),
                (
                    "image_copyright",
                    models.CharField(
                        blank=True,
                        max_length=40,
                        null=True,
                        verbose_name="image copyright",
                    ),
                ),
                (
                    "image_copyright_url",
                    models.CharField(
                        blank=True,
                        max_length=150,
                        null=True,
                        verbose_name="image copyright url",
                    ),
                ),
                ("name_de", models.CharField(max_length=30, verbose_name="name")),
                (
                    "name_en",
                    models.CharField(
                        blank=True, max_length=30, null=True, verbose_name="name"
                    ),
                ),
                ("description_de", models.TextField(verbose_name="description")),
                (
                    "description_en",
                    models.TextField(blank=True, null=True, verbose_name="description"),
                ),
                (
                    "quote",
                    models.TextField(blank=True, null=True, verbose_name="quote"),
                ),
                (
                    "quote_author",
                    models.CharField(
                        blank=True,
                        max_length=50,
                        null=True,
                        verbose_name="quote author",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="created at"),
                ),
                (
                    "attribute",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="rules.attribute",
                        verbose_name="attribute for usage",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="created by",
                    ),
                ),
                ("extensions", models.ManyToManyField(to="rules.extension")),
                (
                    "homebrew_campaign",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="homebrew_%(app_label)s_%(class)s_set",
                        to="campaigns.campaign",
                        verbose_name="homebrew campaign",
                    ),
                ),
                (
                    "homebrew_character",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="homebrew_%(app_label)s_%(class)s_set",
                        to="characters.character",
                        verbose_name="homebrew character",
                    ),
                ),
                (
                    "knowledge",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="rules.knowledge",
                        verbose_name="knowledge for usage",
                    ),
                ),
                (
                    "skill",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="rules.skill",
                        verbose_name="skill for usage",
                    ),
                ),
                (
                    "type",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="body_modifications.bodymodificationtype",
                        verbose_name="type",
                    ),
                ),
            ],
            options={
                "verbose_name": "body modification",
                "verbose_name_plural": "body modifications",
                "ordering": ("id",),
            },
        ),
        migrations.CreateModel(
            name="BodyModificationSocketLocation",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "socket_amount",
                    models.IntegerField(default=1, verbose_name="socket amount"),
                ),
                (
                    "body_modification",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="body_modifications.bodymodification",
                    ),
                ),
                (
                    "socket_location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="body_modifications.socketlocation",
                        verbose_name="socket location",
                    ),
                ),
            ],
            options={
                "verbose_name": "body modification socket location",
                "verbose_name_plural": "body modification socket locations",
                "ordering": ("id",),
            },
        ),
    ]
